개발 환경을 확인하고 구축할 수 있어야함

* java 버전 확인
cmd(명령 프롬프트) -> javac -version 입력
javac : 컴파일, JDK 설치해야 사용 가능
java : 인터프린터, 코드를 실행하는 프로그램

*파일 깨질 때
1. window - preferences - general - workspace - default(ms949) / utf-8
2. 메모장으로 열어서 utf-8 파일로 저장
	열기 -> 모든파일 설정


overloading(중첩) 
매소드 이름 같고, 매개변수 타입, 개수가 다름 / 매개변수 개수에 따라 다르게 설정할 수 있음 

overriding(재정의) 
매소드 이름, 매개변수 타입과 개수 모두 같음

OOP
상속성
기존 클래스의 유용한 부분을 재사용으로 생산성 증대
테스트된 코드 사용으로 신뢰성이 향상

메소드 선언부 : 사용법 또는 활용법

생성자가 없을 때 기본 생성자를 만들어주지만 
생성자가 하나라도 있으면 기본생성자도 직접 만들어야 함

추상클래스 : 여러 클래스의 공통된 특성을 추출해서 선언한 것
	클래스를 효과적으로 만들기 위해 만듬
	일반화를 통해 구체적으로 나눌 때 전체적인 틀을 잡아줄 수 있다
	추상메소드를 가지고 있기 때문에 객체 생성할 수 없다 
		-> 추상클래스에서 상속받은 클래스에서 객체 생성
		-> 상속을 통해 다른 점만 선언하면 되기 때문에 시간 절약

인터페이스 -> 추상클래스 -> 클래스 순으로 작성

추상클래스 : 추상메소드가 1개 이상만 있으면 됨, abstract 붙여줘야 함
인터페이스 : 모든 메소드가 추상메소드로 이루어져 있는 것
		default를 사용해서 실행코드가 있는 메소드를 사용가능
		인터페이스는 abstract를 안붙여도 됨(모든 것을 추상메소드로 인식하기 때문) 

자료형 : 기본형 + 참조형(개발자 정의 자료형)
	기본형 : 8가지
	참조형 : 클래스, 인터페이스 등
	오토박싱, 언박싱 : 기본형 -> 참조형 형변환
	boolean은 형변환 안됨
	
부모클래스의 참조변수는 자식클래스의 객체를 사용할 수 있다

upper casting : 상속받은 쪽에서 상속해준 쪽으로 형변환 할 때 (Polygon) 생략 가능

자바의 모든 클래스는 Object로부터 상속받음

상호작용을 이용하기 위해 형변환을 사용

상속받은 클래스로 형변환은 가능하지만 부모클래스의 다른 자식클래스로 형변환은 불가능하다
	Object
String		Polygon

-> Polygon에서 Object로 형변환 가능
-> Polygon에서 Object로 형변환 후 다시 String으로 형변환은 불가능
	(Object에서 String으로 바로 형변환은 가능)

array : 정적배열, size 안변함
arrayList : 동적배열, size가 늘어나면 그만큼 늘려줌
		멀티 스레드 사용할 때 적용하기 힘듬
		멀티 스레드 : 동시 접속할 때 겹치지 않도록 조치해줘야 함
벡터 : 멀티 스레드에 사용
속도 : array>arrayList>벡터
-> 사이트 접속량이 많아 서버가 터질 때 벡터, arrayList 사용(싸피 서버 터졌을 때)

JCF : collection, vector, arraylist, map, set

다형성 : 객체를 여러 개의 속성으로 나눠 상황에 따라 다르게 실행되도록 만드는 성질

강제 타입 변환 : 상속받은 관계 내에서 사용 가능











